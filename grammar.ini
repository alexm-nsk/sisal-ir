function     = _ "function" _ identifier _
                lpar _
                arg_def_list _ ":" _ "integer" _
                "returns" _ type_list _
                rpar
                _ exp _
                "end function" _

if_else      = "if" _ exp _ "then" _ exp _ "else" _ exp _ "end if"


operand      = call / identifier / number / bin / exp
identifier   = ~"[a-z_][a-z0-9_]*"i
number       = ~"[0-9]+"

exp          = if_else / bin / call / operand
bin          = operand _ bin_op _ operand
call         = !("function" _) identifier _ lpar _ args_list _ rpar

arg_def_list = identifier (_ "," _ identifier)*
args_list    = exp (_ "," _ exp)*

lpar         = "("
rpar         = ")"
_            = ~"\s*"
bin_op       = "+" / "-" / "<" / ">" / "*" / "/" / "^"
type_list    = type (_ "," _ type)*
type         = std_type
std_type     = "integer" / "real"
